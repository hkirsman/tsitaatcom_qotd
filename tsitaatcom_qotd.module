<?php


/**
 * Implements hook_menu().
 */
function tsitaatcom_qotd_menu() {
  $items = array();

  $items['admin/config/tsitaatcom/quote_of_the_day'] = array(
    'title' => 'Quote of the Day',
    'description' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tsitaatcom_qotd_settings_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'tsitaatcom_qotd.admin.inc',
  );

  $items['admin/config/tsitaatcom/quote_of_the_day/cron'] = array(
    'title' => 'Quote of the Day',
    'description' => '',
    'page callback' => array('tsitaatcom_qotd_cron'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );

  return $items;
}

/**
 * Menu hook for admin/config/tsitaatcom/quote_of_the_day/cron.
 */
function tsitaatcom_qotd_cron() {
  $random_quote = _tsitaatcom_qotd_set_quote_of_the_day();
  print_r($random_quote);
}

/**
 * Get random quote not yet on Facebook.
 * @return array Quote
 */
function _tsitaatcom_qotd_set_quote_of_the_day() {
  // Build the initial query.
  $query = tsitaatcomQuote::build_query(array(
    'range' => array(
      'start' => 0,
      'length' => 1,
    ),
  ));

  // Get all quotes that are not in tsitaatcom_qotd table (aka not chosen as quote of the day yet).
  $query->leftJoin('tsitaatcom_qotd', 'tsitaatcom_qotd', 'n.nid = tsitaatcom_qotd.quote_id');
  $query->condition('tsitaatcom_qotd.quote_id', NULL, 'IS');

  // Ignore Adolf Hitler.
  // @todo: there are more of these on the 'ignore list'.
  $query->condition('field_qa_url_alias.field_qa_url_alias_value', 'adolf_hitler', '!=');

  // Reset order by so orderRandom() could work.
  $order =& $query->getOrderBy();
  $order = array();

  $query->orderRandom();

  $quotes = tsitaatcomQuote::get_quotes(array('skip_drupal_not_found' => TRUE), $query);

  print_r(count($quotes));
  if (count($quotes) === 0) {
    watchdog(
      'tsitaatcom_qotd',
      'There are no quotes left for "Quote of the day"!',
      array(),
      WATCHDOG_NOTICE
    );
  }
  elseif (count($quotes) < 10) {
    watchdog(
      'tsitaatcom_qotd',
      'There are less 10 quotes to choose from for "Quote of the day"! Please check!',
      array(),
      WATCHDOG_NOTICE
    );
  }

  if (count($quotes) > 0) {
    db_insert('tsitaatcom_qotd')
      ->fields(array(
        'quote_id' => $quotes[0]['quote_nid'],
      ))
      ->execute();
  }

  print_r($quotes);

  return ;
}

/**
 * Implements hook_block_info().
 */
function tsitaatcom_qotd_block_info() {
  $blocks = array();

  $blocks['tsitaatcom_qotd_block_delta'] = array(
    'info' => t('Quote of the Day'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tsitaatcom_qotd_block_view($delta = '') {
  if (function_exists($delta . '_view')) {
    return call_user_func($delta . '_view');
  }
}

/**
 * Block code to view tsitaatcom_qotd_block_delta
 */
function tsitaatcom_qotd_block_delta_view() {
  $block = array('subject' => '', 'content' => '');

  $block['content'] = _tsitaatcom_qotd_get_latest_quote_of_the_day();

  return $block;
}

function _tsitaatcom_qotd_get_latest_quote_of_the_day() {
  $out = '';

  $result = db_query("SELECT quote_id FROM {tsitaatcom_qotd} ORDER BY id DESC LIMIT 1;");

  if ($result) {
    $quote_nid = $result->fetchAssoc();

    $quotes = tsitaatcomQuote::get_quotes(array(
      'quote_nid' => $quote_nid,
    ));

    $out = tsitaatcomQuote::get_quotes_render($quotes, array(
      'disable_author_image' => TRUE,
      'disable_quote_info' => TRUE,
    ));
  }

  return $out;
}
